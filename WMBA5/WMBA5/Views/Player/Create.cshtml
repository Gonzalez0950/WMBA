@model WMBA5.Models.Player

<link rel="stylesheet" href="css/Layout.css">
<div class="d-flex justify-content-between align-items-center">
    <div class="d-flex align-items-center">
        <div style="margin-right: 10px;">
            <partial name="_ViewHeading" />
        </div>
        <button type="button" class="btn btn-info help-btn" id="helpBtn" data-bs-toggle="popover" data-bs-placement="right"
                data-bs-content="<p>1- In the &quot;Create Player&quot; page, you can enter all the necessary information of a player like Player name, MemberID, Jersey No, Division, Status and Team name.</p>
                       <p>2- Once finished entering the necessary information, click on the &quot;Create&quot; button to add that player.</p>"
                data-bs-html="true">
            ?
        </button>
    </div>
</div>

<hr />
<form asp-action="Create" method="post" enctype="multipart/form-data"> 
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nickname" class="control-label"></label>
                <input asp-for="Nickname" class="form-control" />
                <span asp-validation-for="Nickname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StatusID" class="control-label"></label>
                <select asp-for="StatusID" class="form-control" asp-items="ViewBag.StatusID"></select>
                <span asp-validation-for="StatusID" class="text-danger"></span>
            </div>

        </div>
        <div class="col-md-4">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="MemberID" class="control-label"></label>
                    <input asp-for="MemberID" class="form-control" />
                    <span asp-validation-for="MemberID" class="text-danger"></span>
                </div>
            <div class="form-group">
                <label asp-for="JerseyNumber" class="control-label"></label>
                <input asp-for="JerseyNumber" class="form-control" />
                <span asp-validation-for="JerseyNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DivisionID" class="control-label"></label>
                <select asp-for="DivisionID" class="form-control" asp-items="ViewBag.DivisionID"></select>
                <span asp-validation-for="DivisionID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TeamID" class="control-label"></label>
                @* <select asp-for="TeamID" class="form-control" asp-items="ViewBag.TeamID">
                    <option value="">No Team</option>
                </select> *@
                @Html.DropDownList("TeamID", (SelectList)ViewBag.Teams, "Select a Team", new { @class = "form-control", @style = "margin-top: 0.5rem;" })
                <span asp-validation-for="TeamID" class="text-danger"></span>
            </div>
        </div>
      

    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <partial name="_BackToList" />
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/refreshDDL.js"></script>
    <script>
        $(document).ready(function () {
            $('#DivisionID').change();

            $('#DivisionID').change(function () {
                var divisionId = $(this).val();
                console.log("Selected Division ID:", divisionId); // Log selected division ID
                $.ajax({
                    url: '@Url.Action("GetTeamsByDivision", "Player")',
                    type: 'GET',
                    data: { divisionId: divisionId },
                    success: function (data) {
                        console.log("Teams returned:", data); // Log teams returned from the server
                        var options = '';

                        if (data.$values.length > 0) { // Check if data is not empty
                            options += '<option value="">Select a Team</option>';
                            $('#TeamID').append($('<option></option>').text('Select a Team').attr('value', ''));
                            $.each(data.$values, function (index, team) {
                                options += '<option value="' + team.value + '">' + team.text + '</option>';
                            });
                        } else {
                            options += '<option value="" selected>No teams for this division.</option>';
                        }
                        $('#TeamID').html(options);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error("Error fetching teams:", errorThrown); // Log any errors
                    }
                });
            });
            // Trigger change event on division dropdown to populate teams on page load
            $('#DivisionID').change();
        });

        // Initialize popover with trigger set to 'hover'
        var popoverTriggerListHover = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverListHover = popoverTriggerListHover.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                trigger: 'hover' // Show popover on hover
            });
        });

        // Initialize popover with trigger set to 'click'
        var popoverTriggerListClick = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverListClick = popoverTriggerListClick.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                trigger: 'click' // Show popover on click
            });
        });
    </script>
}
