@model WMBA5.Models.Game

@{
    ViewData["Title"] = "Details";
}

<link rel="stylesheet" href="css/Layout.css">
<div class="d-flex justify-content-between align-items-center">
    <div class="d-flex align-items-center">
        <div style="margin-right: 10px;">
            <h2>Details</h2>
        </div>
        <button type="button" class="btn btn-info help-btn" id="helpBtn" data-bs-toggle="popover" data-bs-placement="right"
                data-bs-content="<p>1- In the &quot;Game Details&quot; Page you can see all the information regarding to that game.</p>
                       <p>2- Below that , you can see the home team lineup in order, 'if set'.</p>
                       <p>3- By clicking on &quot;Edit Home Lineup&quot; button, you can make changes in the home team lineup.</p>"
                data-bs-html="true">
            ?
        </button>
    </div>
</div>

<div>
    <h4>Game</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Division)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Division.DivisionName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.HomeTeam)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.HomeTeam.TeamName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AwayTeam)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AwayTeam.TeamName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Location)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Location.LocationName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Outcome)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Outcome.OutcomeString)
        </dd>
    </dl>
    <hr />
    <table class="table">
        <thead>
            <tr>
                <th>
                    Home Lineup: @Model.HomeTeam.TeamName
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
        <tbody>
            <tr>
                <td>
                            @foreach (var item in Model.GamePlayers
                    .Where(gp => gp.TeamLineup == TeamLineup.Home)
                    .OrderBy(o => o.BattingOrder).ThenBy(p => p.Player.FullName))
                            {
                                @item.BattingOrder @:- @item.Player.Summary <br />
                            }
                    <a asp-action="EditLineup" class="btn btn-primary"
                       asp-route-Lineup="Home" asp-route-id="@Model?.ID">Edit Home Lineup</a>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        // Initialize popover with trigger set to 'hover'
        var popoverTriggerListHover = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverListHover = popoverTriggerListHover.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                trigger: 'hover' // Show popover on hover
            });
        });

        // Initialize popover with trigger set to 'click'
        var popoverTriggerListClick = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverListClick = popoverTriggerListClick.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                trigger: 'click' // Show popover on click
            });
        });
    </script>
}