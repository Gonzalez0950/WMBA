@model IEnumerable<WMBA5.ViewModels.UserVM>

@{
    ViewBag.Title = "User Roles";
}

<link rel="stylesheet" href="css/Layout.css">
<div class="d-flex justify-content-between align-items-center">
    <div class="d-flex align-items-center">
        <div style="margin-right: 10px;">
            <h2>User Role Assignments</h2>
        </div>
        <button type="button" class="btn btn-info help-btn" id="helpBtn" data-bs-toggle="popover" data-bs-placement="right"
                data-bs-content="<p>1- In the &quot;User Role Assignments&quot; page, you can see different users and there roles in WMBA.</p>
                       <p>2- You can click on any the &quot;Edit&quot; button to edit that particular user's role.</p>"
                data-bs-html="true">
            ?
        </button>
    </div>
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserRoles)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @{
                    foreach (var r in item.UserRoles)
                    {
                        @:  @r <br />
                    }
                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary"
                   role="button" data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
                    &#x270E;
                </a>
            </td>
        </tr>
    }

</table>
@section Scripts {
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })

        // Initialize popover with trigger set to 'hover'
        var popoverTriggerListHover = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverListHover = popoverTriggerListHover.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                trigger: 'hover' // Show popover on hover
            });
        });

        // Initialize popover with trigger set to 'click'
        var popoverTriggerListClick = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverListClick = popoverTriggerListClick.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                trigger: 'click' // Show popover on click
            });
        });
    </script>
}


