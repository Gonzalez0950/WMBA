// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WMBA5.Data;

#nullable disable

namespace WMBA5.Data.WMBAMigrations
{
    [DbContext(typeof(WMBAContext))]
    [Migration("20240224174128_Prototype2Initial")]
    partial class Prototype2Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("WMBA5.Models.Club", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClubName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("WMBA5.Models.Coach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoachName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("WMBA5.Models.Division", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClubID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ClubID");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("WMBA5.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AwayTeamID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DivisionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HomeTeamID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OutcomeID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AwayTeamID");

                    b.HasIndex("DivisionID");

                    b.HasIndex("HomeTeamID");

                    b.HasIndex("LocationID");

                    b.HasIndex("OutcomeID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WMBA5.Models.GamePlayer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamLineup")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.HasIndex("PlayerID", "GameID")
                        .IsUnique();

                    b.ToTable("GamePlayers");
                });

            modelBuilder.Entity("WMBA5.Models.GameScore", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Balls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoulBalls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Inning")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Out")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerAtBatID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Runs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strikes")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameID")
                        .IsUnique();

                    b.HasIndex("PlayerAtBatID");

                    b.ToTable("GameScores");
                });

            modelBuilder.Entity("WMBA5.Models.InGameStats", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Balls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Out")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlateApperance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RBI")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Runs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strikes")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.HasIndex("PlayerID");

                    b.ToTable("InGameStats");
                });

            modelBuilder.Entity("WMBA5.Models.Inning", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Balls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoulBalls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Out")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Runs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strikes")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.ToTable("Innings");
                });

            modelBuilder.Entity("WMBA5.Models.Lineup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.HasIndex("TeamID");

                    b.ToTable("Lineup");
                });

            modelBuilder.Entity("WMBA5.Models.Location", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocationName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WMBA5.Models.Outcome", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OutcomeString")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Outcomes");
                });

            modelBuilder.Entity("WMBA5.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DivisionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("JerseyNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MemberID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeamID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DivisionID");

                    b.HasIndex("MemberID")
                        .IsUnique();

                    b.HasIndex("StatusID");

                    b.HasIndex("TeamID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("WMBA5.Models.PlayerAtBat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InningID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.HasIndex("InningID");

                    b.HasIndex("PlayerID");

                    b.ToTable("PlayerAtBat");
                });

            modelBuilder.Entity("WMBA5.Models.PlayerGameScore", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameScoreID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameScoreID");

                    b.HasIndex("PlayerID");

                    b.ToTable("PlayerGameScores");
                });

            modelBuilder.Entity("WMBA5.Models.PlayerLineup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LineupID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("LineupID");

                    b.HasIndex("PlayerID");

                    b.ToTable("PlayerLineups");
                });

            modelBuilder.Entity("WMBA5.Models.PlayerStat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerAppearance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RBI")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RunsScored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StrikeOuts")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Walks")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.HasIndex("PlayerID");

                    b.ToTable("PlayerStats");
                });

            modelBuilder.Entity("WMBA5.Models.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("WMBA5.Models.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("WMBA5.Models.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoachID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DivisionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CoachID");

                    b.HasIndex("DivisionID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("WMBA5.Models.Division", b =>
                {
                    b.HasOne("WMBA5.Models.Club", "Club")
                        .WithMany("Divisions")
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("WMBA5.Models.Game", b =>
                {
                    b.HasOne("WMBA5.Models.Team", "AwayTeam")
                        .WithMany("AwayGames")
                        .HasForeignKey("AwayTeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Division", "Division")
                        .WithMany("Games")
                        .HasForeignKey("DivisionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Team", "HomeTeam")
                        .WithMany("HomeGames")
                        .HasForeignKey("HomeTeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Outcome", "Outcome")
                        .WithMany()
                        .HasForeignKey("OutcomeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AwayTeam");

                    b.Navigation("Division");

                    b.Navigation("HomeTeam");

                    b.Navigation("Location");

                    b.Navigation("Outcome");
                });

            modelBuilder.Entity("WMBA5.Models.GamePlayer", b =>
                {
                    b.HasOne("WMBA5.Models.Game", "Game")
                        .WithMany("GamePlayers")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Player", "Player")
                        .WithMany("GamePlayers")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("WMBA5.Models.GameScore", b =>
                {
                    b.HasOne("WMBA5.Models.Game", "Game")
                        .WithOne("GameScore")
                        .HasForeignKey("WMBA5.Models.GameScore", "GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.PlayerAtBat", "PlayerAtBat")
                        .WithMany()
                        .HasForeignKey("PlayerAtBatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("PlayerAtBat");
                });

            modelBuilder.Entity("WMBA5.Models.InGameStats", b =>
                {
                    b.HasOne("WMBA5.Models.Game", "Game")
                        .WithMany("InGameStats")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Player", "Player")
                        .WithMany("InGameStats")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("WMBA5.Models.Inning", b =>
                {
                    b.HasOne("WMBA5.Models.Game", "Game")
                        .WithMany("Innings")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("WMBA5.Models.Lineup", b =>
                {
                    b.HasOne("WMBA5.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WMBA5.Models.Player", b =>
                {
                    b.HasOne("WMBA5.Models.Division", "Division")
                        .WithMany("Players")
                        .HasForeignKey("DivisionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Division");

                    b.Navigation("Status");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WMBA5.Models.PlayerAtBat", b =>
                {
                    b.HasOne("WMBA5.Models.Game", "Game")
                        .WithMany("PlayerAtBats")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Inning", "Inning")
                        .WithMany()
                        .HasForeignKey("InningID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Player", "Player")
                        .WithMany("PlayerAtBats")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Inning");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("WMBA5.Models.PlayerGameScore", b =>
                {
                    b.HasOne("WMBA5.Models.GameScore", "GameScore")
                        .WithMany("PlayerGameScores")
                        .HasForeignKey("GameScoreID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Player", "Player")
                        .WithMany("PlayerGameScores")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GameScore");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("WMBA5.Models.PlayerLineup", b =>
                {
                    b.HasOne("WMBA5.Models.Lineup", "Lineup")
                        .WithMany("Lineups")
                        .HasForeignKey("LineupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Player", "Player")
                        .WithMany("Lineups")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lineup");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("WMBA5.Models.PlayerStat", b =>
                {
                    b.HasOne("WMBA5.Models.Game", "Game")
                        .WithMany("PlayerStats")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Player", "Player")
                        .WithMany("PlayerStats")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("WMBA5.Models.Team", b =>
                {
                    b.HasOne("WMBA5.Models.Coach", "Coach")
                        .WithMany("Teams")
                        .HasForeignKey("CoachID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WMBA5.Models.Division", "Division")
                        .WithMany("Teams")
                        .HasForeignKey("DivisionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("WMBA5.Models.Club", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("WMBA5.Models.Coach", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("WMBA5.Models.Division", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Players");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("WMBA5.Models.Game", b =>
                {
                    b.Navigation("GamePlayers");

                    b.Navigation("GameScore");

                    b.Navigation("InGameStats");

                    b.Navigation("Innings");

                    b.Navigation("PlayerAtBats");

                    b.Navigation("PlayerStats");
                });

            modelBuilder.Entity("WMBA5.Models.GameScore", b =>
                {
                    b.Navigation("PlayerGameScores");
                });

            modelBuilder.Entity("WMBA5.Models.Lineup", b =>
                {
                    b.Navigation("Lineups");
                });

            modelBuilder.Entity("WMBA5.Models.Player", b =>
                {
                    b.Navigation("GamePlayers");

                    b.Navigation("InGameStats");

                    b.Navigation("Lineups");

                    b.Navigation("PlayerAtBats");

                    b.Navigation("PlayerGameScores");

                    b.Navigation("PlayerStats");
                });

            modelBuilder.Entity("WMBA5.Models.Team", b =>
                {
                    b.Navigation("AwayGames");

                    b.Navigation("HomeGames");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
